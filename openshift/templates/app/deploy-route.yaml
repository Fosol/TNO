apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: postgres-db-migration
  annotations:
    description: Java flyway database migration for postgreSQL database
    iconClass: icon-postgresql
    openshift.io/display-name: Java flyway database migration for postgreSQL database
    openshift.io/long-description: Java flyway database migration for postgreSQL database
    tags: postgresql,database,flyway,migration

parameters:
  - name: APP_NAME
    displayName: 'Application Name'
    description: 'The name of the application.'
    required: true
    value: 'tno'
  - name: GROUP_NAME
    displayName: 'Component Group Name'
    description: 'The name of the application component group'
    required: true
    value: 'app-editor'
  - name: PROJECT_NAMESPACE
    displayName: 'OpenShift Project Namespace'
    description: 'The namespace of the OpenShift project containing the application.'
    required: true
    value: '9b301c'
  - name: ENV_NAME
    displayName: 'Environment name'
    description: 'The name for this environment [dev, test, prod]'
    required: true
    value: 'dev'
  - name: INSTANCE
    displayName: 'Unique Identifier'
    description: "A unique identifier to allow for multiple instances (i.e. '-dev')."
    value: ''

  - name: APP_HOST
    displayName: 'Application Hostname'
    description: 'The exposed hostname that will route to the the React frontend, if left blank a value will be defaulted.'
    value: 'tno-dev.apps.silver.devops.gov.bc.ca/editor'
  - name: APP_PATH
    displayName: 'Application URL Root Path'
    description: 'The URL root path to the web application'
    value: '/editor'
  - name: APP_PORT
    displayName: 'Application Port'
    description: 'The port used to communicate with the Pod'
    value: '8080'

objects:
  # The route for the app.
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${GROUP_NAME}${INSTANCE}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}-${GROUP_NAME}${INSTANCE}
        app: ${APP_NAME}
        group: ${GROUP_NAME}
        env: ${ENV_NAME}
    spec:
      host: ${APP_HOST}
      path: ${APP_PATH}
      port:
        targetPort: ${APP_PORT}-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
        # caCertificate: ""
        # certificate: ""
        # key: ""
      to:
        kind: Service
        name: ${APP_NAME}-${GROUP_NAME}${INSTANCE}
        weight: 100
